import data.tests.state_tests
import data.tests.threat_tests
import state
import threat
import unittest

class TestThreatModule(unittest.TestCase):
    def test_add(self):
        self.assertEqual(threat.valid_key(12), False)
        self.assertEqual(threat.valid_key(10), False)
        self.assertEqual(threat.valid_key(19), False)
        self.assertEqual(threat.valid_key(18), False)
        self.assertEqual(threat.valid_key(16), False)
        self.assertEqual(threat.valid_key(threat.valid_keys[33]), True)
        self.assertEqual(threat.valid_key(threat.valid_keys[44]), True)
        self.assertEqual(threat.valid_key(threat.valid_keys[55]), True)
        self.assertEqual(threat.valid_key(threat.valid_keys[66]), True)
        self.assertEqual(threat.valid_key(threat.valid_keys[77]), True)
        self.assertEqual(threat.valid_key(threat.valid_keys[88]), True)
        self.assertEqual(threat.valid_key(threat.valid_keys[99]), True)
        self.assertEqual(threat.valid_key(threat.valid_keys[111]), True)
        self.assertEqual(threat.valid_key(threat.valid_keys[122]), True)
        self.assertEqual(threat.valid_key(threat.valid_keys[133]), True)
        self.assertEqual(threat.is_pawn_threat(228, 213, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(229, 212, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(229, 214, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(230, 213, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(230, 215, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(231, 214, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(231, 216, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(232, 215, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(232, 217, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(233, 216, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(233, 218, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(234, 217, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(234, 219, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(235, 218, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(82, 99, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(98, 83, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(98, 115, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(114, 99, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(114, 131, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(130, 115, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(130, 147, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(146, 131, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(146, 163, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(162, 147, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(162, 179, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(178, 163, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(178, 195, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(194, 179, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(52, 69, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(53, 68, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(53, 70, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(54, 69, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(54, 71, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(55, 70, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(55, 72, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(56, 71, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(56, 73, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(57, 72, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(57, 74, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(58, 73, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(58, 75, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(59, 74, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(93, 108, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(109, 92, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(109, 124, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(125, 108, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(125, 140, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(141, 124, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(141, 156, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(157, 140, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(157, 172, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(173, 156, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(173, 188, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(189, 172, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(189, 204, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(205, 188, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_pawn_threat(threat.directions[0] + 228, threat.directions[0] + 213, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[0] + 229, threat.directions[0] + 212, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[0] + 229, threat.directions[0] + 214, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[0] + 230, threat.directions[0] + 213, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[0] + 230, threat.directions[0] + 215, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[0] + 231, threat.directions[0] + 214, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[0] + 231, threat.directions[0] + 216, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[0] + 232, threat.directions[0] + 215, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[0] + 232, threat.directions[0] + 217, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[0] + 233, threat.directions[0] + 216, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[0] + 233, threat.directions[0] + 218, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[0] + 234, threat.directions[0] + 217, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[0] + 234, threat.directions[0] + 219, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[0] + 235, threat.directions[0] + 235, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[3] + 82, threat.directions[3] + 99, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[3] + 98, threat.directions[3] + 83, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[3] + 98, threat.directions[3] + 115, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[3] + 114, threat.directions[3] + 99, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[3] + 114, threat.directions[3] + 131, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[3] + 130, threat.directions[3] + 115, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[3] + 130, threat.directions[3] + 147, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[3] + 146, threat.directions[3] + 131, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[3] + 146, threat.directions[3] + 163, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[3] + 162, threat.directions[3] + 147, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[3] + 162, threat.directions[3] + 179, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[3] + 178, threat.directions[3] + 163, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[3] + 178, threat.directions[3] + 195, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[3] + 194, threat.directions[3] + 179, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[1] + 52, threat.directions[1] + 69, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[1] + 53, threat.directions[1] + 68, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[1] + 53, threat.directions[1] + 70, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[1] + 54, threat.directions[1] + 69, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[1] + 54, threat.directions[1] + 71, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[1] + 55, threat.directions[1] + 70, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[1] + 55, threat.directions[1] + 72, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[1] + 56, threat.directions[1] + 71, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[1] + 56, threat.directions[1] + 73, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[1] + 57, threat.directions[1] + 72, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[1] + 57, threat.directions[1] + 74, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[1] + 58, threat.directions[1] + 73, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[1] + 58, threat.directions[1] + 75, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[1] + 59, threat.directions[1] + 74, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[2] + 93, threat.directions[2] + 108, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[2] + 109, threat.directions[2] + 92, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[2] + 109, threat.directions[2] + 124, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[2] + 125, threat.directions[2] + 108, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[2] + 125, threat.directions[2] + 140, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[2] + 141, threat.directions[2] + 124, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[2] + 141, threat.directions[2] + 156, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[2] + 157, threat.directions[2] + 140, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[2] + 157, threat.directions[2] + 172, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[2] + 173, threat.directions[2] + 156, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[2] + 173, threat.directions[2] + 188, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[2] + 189, threat.directions[2] + 172, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[2] + 189, threat.directions[2] + 204, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_pawn_threat(threat.directions[2] + 205, threat.directions[2] + 188, data.tests.threat_tests.board_xre), False)
        self.assertEqual(threat.is_knight_threat(245, 212, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_knight_threat(245, 214, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_knight_threat(250, 217, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_knight_threat(250, 219, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_knight_threat(97, 83, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_knight_threat(97, 115, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_knight_threat(177, 195, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_knight_threat(177, 163, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_knight_threat(37, 68, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_knight_threat(37, 70, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_knight_threat(42, 73, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_knight_threat(42, 75, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_knight_threat(110, 92, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_knight_threat(110, 124, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_knight_threat(190, 172, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_knight_threat(190, 204, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_knight_threat(threat.directions[0] + 245, threat.directions[0] + 212, data.tests.threat_tests.board_txc), False)
        self.assertEqual(threat.is_knight_threat(threat.directions[0] + 245, threat.directions[0] + 214, data.tests.threat_tests.board_txc), False)
        self.assertEqual(threat.is_knight_threat(threat.directions[0] + 250, threat.directions[0] + 217, data.tests.threat_tests.board_txc), False)
        self.assertEqual(threat.is_knight_threat(threat.directions[0] + 250, threat.directions[0] + 219, data.tests.threat_tests.board_txc), False)
        self.assertEqual(threat.is_knight_threat(threat.directions[0] + 97, threat.directions[0] + 83, data.tests.threat_tests.board_txc), False)
        self.assertEqual(threat.is_knight_threat(threat.directions[0] + 97, threat.directions[0] + 115, data.tests.threat_tests.board_txc), False)
        self.assertEqual(threat.is_knight_threat(threat.directions[0] + 177, threat.directions[0] + 195, data.tests.threat_tests.board_txc), False)
        self.assertEqual(threat.is_knight_threat(threat.directions[0] + 177, threat.directions[0] + 163, data.tests.threat_tests.board_txc), False)
        self.assertEqual(threat.is_knight_threat(threat.directions[0] + 37, threat.directions[0] + 68, data.tests.threat_tests.board_txc), False)
        self.assertEqual(threat.is_knight_threat(threat.directions[0] + 37, threat.directions[0] + 70, data.tests.threat_tests.board_txc), False)
        self.assertEqual(threat.is_knight_threat(threat.directions[0] + 42, threat.directions[0] + 73, data.tests.threat_tests.board_txc), False)
        self.assertEqual(threat.is_knight_threat(threat.directions[0] + 42, threat.directions[0] + 75, data.tests.threat_tests.board_txc), False)
        self.assertEqual(threat.is_knight_threat(threat.directions[0] + 110, threat.directions[0] + 92, data.tests.threat_tests.board_txc), False)
        self.assertEqual(threat.is_knight_threat(threat.directions[0] + 110, threat.directions[0] + 124, data.tests.threat_tests.board_txc), False)
        self.assertEqual(threat.is_knight_threat(threat.directions[0] + 190, threat.directions[0] + 172, data.tests.threat_tests.board_txc), False)
        self.assertEqual(threat.is_knight_threat(threat.directions[0] + 190, threat.directions[0] + 204, data.tests.threat_tests.board_txc), False)
        self.assertEqual(threat.is_bishop_threat(245, 228, data.tests.threat_tests.board_bfb), True)
        self.assertEqual(threat.is_bishop_threat(245, 194, data.tests.threat_tests.board_bfb), False)
        self.assertEqual(threat.is_bishop_threat(245, 140, data.tests.threat_tests.board_bfb), True)
        self.assertEqual(threat.is_bishop_threat(245, 125, data.tests.threat_tests.board_bfb), True)
        self.assertEqual(threat.is_bishop_threat(245, 110, data.tests.threat_tests.board_bfb), False)
        self.assertEqual(threat.is_rook_threat(199, 71, data.tests.threat_tests.board_rfr), True)
        self.assertEqual(threat.is_rook_threat(199, 195, data.tests.threat_tests.board_rfr), True)
        self.assertEqual(threat.is_rook_threat(199, 204, data.tests.threat_tests.board_rfr), True)
        self.assertEqual(threat.is_rook_threat(199, 215, data.tests.threat_tests.board_rfr), True)
        self.assertEqual(threat.is_rook_threat(199, 55, data.tests.threat_tests.board_rfr), True)
        self.assertEqual(threat.is_rook_threat(199, 194, data.tests.threat_tests.board_rfr), True)
        self.assertEqual(threat.is_rook_threat(199, 205, data.tests.threat_tests.board_rfr), True)
        self.assertEqual(threat.is_rook_threat(199, 231, data.tests.threat_tests.board_rfr), True)
        self.assertEqual(threat.is_rook_threat(199, 39, data.tests.threat_tests.board_rfr), False)
        self.assertEqual(threat.is_rook_threat(199, 193, data.tests.threat_tests.board_rfr), False)
        self.assertEqual(threat.is_rook_threat(199, 206, data.tests.threat_tests.board_rfr), False)
        self.assertEqual(threat.is_rook_threat(199, 247, data.tests.threat_tests.board_rfr), False)
        self.assertEqual(threat.is_queen_threat(199, 71, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_queen_threat(199, 195, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_queen_threat(199, 204, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_queen_threat(199, 215, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_queen_threat(199, 55, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_queen_threat(199, 194, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_queen_threat(199, 205, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_queen_threat(199, 231, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_queen_threat(199, 39, data.tests.threat_tests.board_qfq), False)
        self.assertEqual(threat.is_queen_threat(199, 193, data.tests.threat_tests.board_qfq), False)
        self.assertEqual(threat.is_queen_threat(199, 206, data.tests.threat_tests.board_qfq), False)
        self.assertEqual(threat.is_queen_threat(199, 247, data.tests.threat_tests.board_qfq), False)
        self.assertEqual(threat.is_queen_threat(199, 131, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_queen_threat(199, 114, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_queen_threat(199, 124, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_queen_threat(199, 109, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_queen_threat(199, 216, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_queen_threat(199, 233, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_queen_threat(199, 214, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_queen_threat(199, 229, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_queen_threat(199, 97, data.tests.threat_tests.board_qfq), False)
        self.assertEqual(threat.is_queen_threat(199, 244, data.tests.threat_tests.board_qfq), False)
        self.assertEqual(threat.is_queen_threat(199, 250, data.tests.threat_tests.board_qfq), False)
        self.assertEqual(threat.is_queen_threat(199, 94, data.tests.threat_tests.board_qfq), False)
        self.assertEqual(threat.is_queen_threat(198, 998, data.tests.threat_tests.board_qfq), False)
        self.assertEqual(threat.is_king_threat(87, 70, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_king_threat(87, 71, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_king_threat(87, 72, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_king_threat(87, 86, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_king_threat(87, 88, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_king_threat(87, 102, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_king_threat(87, 103, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_king_threat(87, 104, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_king_threat(87, 53, data.tests.threat_tests.board_txc), False)
        self.assertEqual(threat.is_king_threat(87, 54, data.tests.threat_tests.board_txc), False)
        self.assertEqual(threat.is_king_threat(87, 55, data.tests.threat_tests.board_txc), False)
        self.assertEqual(threat.is_king_threat(87, 56, data.tests.threat_tests.board_txc), False)
        self.assertEqual(threat.is_king_threat(87, 57, data.tests.threat_tests.board_txc), False)
        self.assertEqual(threat.is_king_threat(87, 73, data.tests.threat_tests.board_txc), False)
        self.assertEqual(threat.is_king_threat(87, 89, data.tests.threat_tests.board_txc), False)
        self.assertEqual(threat.is_king_threat(87, 105, data.tests.threat_tests.board_txc), False)
        self.assertEqual(threat.is_threat(228, 213, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(229, 212, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(229, 214, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(230, 213, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(230, 215, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(231, 214, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(231, 216, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(232, 215, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(232, 217, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(233, 216, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(233, 218, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(234, 217, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(234, 219, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(235, 218, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(82, 99, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(98, 83, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(98, 115, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(114, 99, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(114, 131, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(130, 115, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(130, 147, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(146, 131, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(146, 163, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(162, 147, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(162, 179, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(178, 163, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(178, 195, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(194, 179, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(52, 69, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(53, 68, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(53, 70, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(54, 69, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(54, 71, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(55, 70, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(55, 72, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(56, 71, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(56, 73, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(57, 72, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(57, 74, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(58, 73, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(58, 75, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(59, 74, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(93, 108, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(109, 92, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(109, 124, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(125, 108, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(125, 140, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(141, 124, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(141, 156, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(157, 140, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(157, 172, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(173, 156, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(173, 188, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(189, 172, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(189, 204, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(205, 188, data.tests.threat_tests.board_xre), True)
        self.assertEqual(threat.is_threat(245, 212, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_threat(245, 214, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_threat(250, 217, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_threat(250, 219, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_threat(97, 83, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_threat(97, 115, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_threat(177, 195, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_threat(177, 163, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_threat(37, 68, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_threat(37, 70, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_threat(42, 73, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_threat(42, 75, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_threat(110, 92, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_threat(110, 124, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_threat(190, 172, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_threat(190, 204, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_threat(245, 228, data.tests.threat_tests.board_bfb), True)
        self.assertEqual(threat.is_threat(245, 140, data.tests.threat_tests.board_bfb), True)
        self.assertEqual(threat.is_threat(245, 125, data.tests.threat_tests.board_bfb), True)
        self.assertEqual(threat.is_threat(199, 71, data.tests.threat_tests.board_rfr), True)
        self.assertEqual(threat.is_threat(199, 195, data.tests.threat_tests.board_rfr), True)
        self.assertEqual(threat.is_threat(199, 204, data.tests.threat_tests.board_rfr), True)
        self.assertEqual(threat.is_threat(199, 215, data.tests.threat_tests.board_rfr), True)
        self.assertEqual(threat.is_threat(199, 55, data.tests.threat_tests.board_rfr), True)
        self.assertEqual(threat.is_threat(199, 194, data.tests.threat_tests.board_rfr), True)
        self.assertEqual(threat.is_threat(199, 205, data.tests.threat_tests.board_rfr), True)
        self.assertEqual(threat.is_threat(199, 231, data.tests.threat_tests.board_rfr), True)
        self.assertEqual(threat.is_threat(199, 71, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_threat(199, 195, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_threat(199, 204, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_threat(199, 215, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_threat(199, 55, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_threat(199, 194, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_threat(199, 205, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_threat(199, 231, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_threat(199, 131, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_threat(199, 114, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_threat(199, 124, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_threat(199, 109, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_threat(199, 216, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_threat(199, 233, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_threat(199, 214, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_threat(199, 229, data.tests.threat_tests.board_qfq), True)
        self.assertEqual(threat.is_threat(87, 70, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_threat(87, 71, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_threat(87, 72, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_threat(87, 86, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_threat(87, 88, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_threat(87, 102, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_threat(87, 103, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_threat(87, 104, data.tests.threat_tests.board_txc), True)
        self.assertEqual(threat.is_threat(16, 16, data.tests.threat_tests.board_txc), False)

class TestMoveModule(unittest.TestCase):
    def test_add(self):
        self.assertEqual(move.next_move(0), 1)
        self.assertEqual(move.next_move(1), 2)
        self.assertEqual(move.next_move(2), 3)
        self.assertEqual(move.next_move(3), 0)
        self.assertEqual(move.pawn_start_square(66), False)
        self.assertEqual(move.pawn_start_square(88), False)
        self.assertEqual(move.pawn_start_square(244), False)
        self.assertEqual(move.pawn_start_square(299), False)
        self.assertEqual(move.pawn_start_square(1), False)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[0]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[1]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[2]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[3]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[4]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[5]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[6]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[7]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[8]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[9]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[10]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[11]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[12]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[13]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[14]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[15]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[16]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[17]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[18]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[19]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[20]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[21]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[22]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[23]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[24]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[25]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[26]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[27]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[28]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[29]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[30]), True)
        self.assertEqual(move.pawn_start_square(move.pawn_start_keys[31]), True)
        self.assertEqual(move.valid_promotion(22), False)
        self.assertEqual(move.valid_promotion(10), False)
        self.assertEqual(move.valid_promotion(0), False)
        self.assertEqual(move.valid_promotion(5), False)
        self.assertEqual(move.valid_promotion(move.valid_promotion_codes[0]), True)
        self.assertEqual(move.valid_promotion(move.valid_promotion_codes[1]), True)
        self.assertEqual(move.valid_promotion(move.valid_promotion_codes[2]), True)
        self.assertEqual(move.valid_promotion(move.valid_promotion_codes[3]), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[0][0], 0), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[0][1], 0), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[0][2], 0), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[0][3], 0), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[0][4], 0), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[0][5], 0), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[0][6], 0), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[0][7], 0), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[0][8], 0), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[0][9], 0), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[0][10], 0), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[0][11], 0), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[0][12], 0), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[0][13], 0), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[1][0], 1), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[1][1], 1), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[1][2], 1), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[1][3], 1), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[1][4], 1), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[1][5], 1), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[1][6], 1), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[1][7], 1), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[1][8], 1), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[1][9], 1), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[1][10], 1), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[1][11], 1), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[1][12], 1), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[1][13], 1), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[2][0], 2), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[2][1], 2), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[2][2], 2), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[2][3], 2), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[2][4], 2), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[2][5], 2), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[2][6], 2), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[2][7], 2), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[2][8], 2), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[2][9], 2), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[2][10], 2), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[2][11], 2), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[2][12], 2), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[2][13], 2), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[3][0], 3), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[3][1], 3), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[3][2], 3), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[3][3], 3), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[3][4], 3), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[3][5], 3), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[3][6], 3), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[3][7], 3), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[3][8], 3), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[3][9], 3), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[3][10], 3), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[3][11], 3), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[3][12], 3), True)
        self.assertEqual(move.is_promotion_key(move.promotion_keys[3][13], 3), True)
        self.assertEqual(move.is_promotion_key(99, 0), False)
        self.assertEqual(move.is_promotion_key(7, 0), False)
        self.assertEqual(move.is_promotion_key(3, 0), False)
        self.assertEqual(move.is_promotion_key(333, 0), False)
        self.assertEqual(move.is_promotion_key(222, 0), False)
        self.assertEqual(move.is_promotion_key(66, 0), False)
        self.assertEqual(move.is_promotion_key(888, 0), False)
        self.assertEqual(move.is_promotion_key(4, 0), False)
        self.assertEqual(move.is_promotion_key(5, 0), False)
        self.assertEqual(move.is_promotion_key(17, 0), False)
        self.assertEqual(move.is_promotion_key(99, 1), False)
        self.assertEqual(move.is_promotion_key(7, 1), False)
        self.assertEqual(move.is_promotion_key(3, 1), False)
        self.assertEqual(move.is_promotion_key(333, 1), False)
        self.assertEqual(move.is_promotion_key(222, 1), False)
        self.assertEqual(move.is_promotion_key(66, 1), False)
        self.assertEqual(move.is_promotion_key(888, 1), False)
        self.assertEqual(move.is_promotion_key(4, 1), False)
        self.assertEqual(move.is_promotion_key(5, 1), False)
        self.assertEqual(move.is_promotion_key(17, 1), False)
        self.assertEqual(move.is_promotion_key(99, 2), False)
        self.assertEqual(move.is_promotion_key(7, 2), False)
        self.assertEqual(move.is_promotion_key(3, 2), False)
        self.assertEqual(move.is_promotion_key(333, 2), False)
        self.assertEqual(move.is_promotion_key(222, 2), False)
        self.assertEqual(move.is_promotion_key(66, 2), False)
        self.assertEqual(move.is_promotion_key(888, 2), False)
        self.assertEqual(move.is_promotion_key(4, 2), False)
        self.assertEqual(move.is_promotion_key(5, 2), False)
        self.assertEqual(move.is_promotion_key(17, 2), False)
        self.assertEqual(move.is_promotion_key(99, 3), False)
        self.assertEqual(move.is_promotion_key(7, 3), False)
        self.assertEqual(move.is_promotion_key(3, 3), False)
        self.assertEqual(move.is_promotion_key(333, 3), False)
        self.assertEqual(move.is_promotion_key(222, 3), False)
        self.assertEqual(move.is_promotion_key(66, 3), False)
        self.assertEqual(move.is_promotion_key(888, 3), False)
        self.assertEqual(move.is_promotion_key(4, 3), False)
        self.assertEqual(move.is_promotion_key(5, 3), False)
        self.assertEqual(move.is_promotion_key(17, 3), False)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.board_castle_ks_test, 0, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'])), 22)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.board_castle_ks_test, 1, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'])), 22)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.board_castle_ks_test, 2, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'])), 22)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.board_castle_ks_test, 3, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'])), 22)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.board_castle_qs_test, 0, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'])), 23)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.board_castle_qs_test, 1, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'])), 23)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.board_castle_qs_test, 2, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'])), 23)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.board_castle_qs_test, 3, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'])), 23)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.board_xre, 0, [[True, True], [True, True], [True, True], [True, True]], ['-', 213, '-', '-'])), 20)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.board_xre, 0, [[True, True], [True, True], [True, True], [True, True]], ['-', 212, '-', '-'])), 20)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.board_xre, 0, [[True, True], [True, True], [True, True], [True, True]], ['-', 213, '-', 214])), 20)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.board_xre, 0, [[True, True], [True, True], [True, True], [True, True]], ['-', 214, '-', 213])), 20)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.board_single_pawns, 0, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'])), 24)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.board_single_pawns, 1, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'])), 24)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.board_single_pawns, 2, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'])), 24)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.board_single_pawns, 3, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'])), 24)
        self.assertEqual(move.undo([['somedata1', 'somedata2'], ['somedata3', 'somedata4']]), [['somedata3', 'somedata4'], [['somedata1', 'somedata2']]])
        self.assertEqual(move.is_not_opposite_color(0, 0), True)
        self.assertEqual(move.is_not_opposite_color(0, 1), False)
        self.assertEqual(move.is_not_opposite_color(0, 2), True)
        self.assertEqual(move.is_not_opposite_color(0, 3), False)
        self.assertEqual(move.is_not_opposite_color(1, 0), False)
        self.assertEqual(move.is_not_opposite_color(1, 1), True)
        self.assertEqual(move.is_not_opposite_color(1, 2), False)
        self.assertEqual(move.is_not_opposite_color(1, 3), True)
        self.assertEqual(move.is_not_opposite_color(2, 0), True)
        self.assertEqual(move.is_not_opposite_color(2, 1), False)
        self.assertEqual(move.is_not_opposite_color(2, 2), True)
        self.assertEqual(move.is_not_opposite_color(2, 3), False)
        self.assertEqual(move.is_not_opposite_color(3, 0), False)
        self.assertEqual(move.is_not_opposite_color(3, 1), True)
        self.assertEqual(move.is_not_opposite_color(3, 2), False)
        self.assertEqual(move.is_not_opposite_color(3, 3), True)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.board_castle_ks_has_threat_test, 0, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'])), 25)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.board_castle_ks_has_threat_test, 1, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'])), 25)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.board_castle_ks_has_threat_test, 2, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'])), 25)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.board_castle_ks_has_threat_test, 3, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'])), 25)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.board_castle_qs_has_threat_test, 0, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'])), 26)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.board_castle_qs_has_threat_test, 1, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'])), 26)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.board_castle_qs_has_threat_test, 2, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'])), 26)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.board_castle_qs_has_threat_test, 3, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'])), 26)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.enpassants_board_one, 0, [[True, True], [True, True], [True, True], [True, True]], ['-', 179, '-', 108])), 21)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.enpassants_board_one, 2, [[True, True], [True, True], [True, True], [True, True]], ['-', 179, '-', 108])), 21)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.enpassants_board_one, 0, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'])), 20)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.enpassants_board_one, 2, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'])), 20)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.enpassants_board_two, 1, [[True, True], [True, True], [True, True], [True, True]], [213, '-', 74, '-'])), 21)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.enpassants_board_two, 3, [[True, True], [True, True], [True, True], [True, True]], [213, '-', 74, '-'])), 21)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.enpassants_board_two, 1, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'])), 20)
        self.assertEqual(len(move.get_moves(data.tests.move_tests.enpassants_board_two, 3, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'])), 20)


class TestStateModule(unittest.TestCase):
    def test_add(self):
        self.assertEqual(state.is_draw(0, data.tests.state_tests.board_xre, 50, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'], []), True)
        self.assertEqual(state.is_draw(0, data.tests.state_tests.board_xre, 49, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'], []), False)
        self.assertEqual(state.is_draw(1, data.tests.state_tests.board_xre, 49, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'], []), False)
        self.assertEqual(state.is_draw(2, data.tests.state_tests.board_xre, 49, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'], []), False)
        self.assertEqual(state.is_draw(3, data.tests.state_tests.board_xre, 49, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'], []), False)
        self.assertEqual(state.in_checkmate(3, data.tests.state_tests.noncheckmate_board_one, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-']), False)
        self.assertEqual(state.in_checkmate(0, data.tests.state_tests.nocheckmate, [[False, False], [False, False], [False, False], [False, False]], ['-', '-', '-', '-']), False)
        self.assertEqual(state.in_checkmate(0, data.tests.state_tests.checkmate, [[False, False], [False, False], [False, False], [False, False]], ['-', '-', '-', '-']), True)
        self.assertEqual(state.is_draw(0, data.tests.state_tests.board_xre, 49, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'], [[0, data.tests.state_tests.board_xre], [0, data.tests.state_tests.board_xre], [0, data.tests.state_tests.nocheckmate], [0, data.tests.state_tests.nocheckmate]]), True)
        self.assertEqual(state.is_draw(0, data.tests.state_tests.stalemate, 33, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'], []), True)
        self.assertEqual(state.is_draw(1, data.tests.state_tests.stalemate, 33, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'], []), True)
        self.assertEqual(state.is_draw(2, data.tests.state_tests.stalemate, 33, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'], []), True)
        self.assertEqual(state.is_draw(3, data.tests.state_tests.stalemate, 33, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'], []), True)
        self.assertEqual(state.in_stalemate(0, data.tests.state_tests.stalemate, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-']), True)
        self.assertEqual(state.in_stalemate(1, data.tests.state_tests.stalemate, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-']), True)
        self.assertEqual(state.in_stalemate(2, data.tests.state_tests.stalemate, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-']), True)
        self.assertEqual(state.in_stalemate(3, data.tests.state_tests.stalemate, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-']), True)
        self.assertEqual(state.is_gameover(0, data.tests.state_tests.stalemate, 33, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'], []), True)
        self.assertEqual(state.is_gameover(1, data.tests.state_tests.stalemate, 33, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'], []), True)
        self.assertEqual(state.is_gameover(2, data.tests.state_tests.stalemate, 33, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'], []), True)
        self.assertEqual(state.is_gameover(3, data.tests.state_tests.stalemate, 33, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'], []), True)
        self.assertEqual(state.is_gameover(3, data.tests.state_tests.noncheckmate_board_one, 33, [[True, True], [True, True], [True, True], [True, True]], ['-', '-', '-', '-'], []), False)
        self.assertEqual(state.is_gameover(0, data.tests.state_tests.nocheckmate, 33, [[False, False], [False, False], [False, False], [False, False]], ['-', '-', '-', '-'], []), False)
        self.assertEqual(state.is_gameover(0, data.tests.state_tests.checkmate, 33, [[False, False], [False, False], [False, False], [False, False]], ['-', '-', '-', '-'], []), True)

if __name__ == '__main__':
    unittest.main()